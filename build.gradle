
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        // see: https://github.com/thebignet/swagger-codegen-gradle-plugin-example
        classpath("io.swagger:swagger-codegen:2.3.0-SNAPSHOT")
    }
}

ext {
    springBootVersion = '1.5.7.RELEASE'
    swaggerVersion = '2.3.0-SNAPSHOT'
    h2Version = '1.4.193'
    springfoxVersion = '2.7.0'
    nodeVersion = '8.8.0'
    npmVersion = '5.5.1'
}


repositories {
    mavenCentral()
}

dependencies {
    // needs include in settings.gradle
  //  build project(':frontend')
//    compile project(':backend')
}

//     "copy": "cp -r dist/* ../backend/src/main/resources/public",



// download the api docs from swagger backend to generate frontend code
// see: https://github.com/thebignet/swagger-codegen-gradle-plugin-example/blob/master/build.gradle
task downloadApiDocs {
    group 'API Generation'
    description 'Download the API definition from the swagger endpoint'

    doLast {
        def swaggerGenInput = new File('./frontend/src/resources/api.json')
        swaggerGenInput.parentFile.mkdirs()  // mkae sure the directory exists
        if (!swaggerGenInput.exists()) {
            outputs.println("delete existing api doc")
        }

        // create the new source file
        new URL('http://localhost:8080/v2/api-docs').withInputStream {
            stream -> swaggerGenInput.withOutputStream { it << stream }
        }
    }
}

task generateApi {
    group 'API Generation'
    description 'Create angular API from the swagger definition'

    doLast {
        inputs.files(file('./frontend/src/resources/api.json'))
        outputs.dir(file('./frontend/src/generated'))
        //noinspection UnnecessaryQualifiedReference
        def config = new io.swagger.codegen.config.CodegenConfigurator()
        config.setInputSpec("file:///$projectDir/frontend/src/resources/api.json")
        config.setOutputDir("$projectDir/frontend/src/generated")
        config.setLang('typescript-angular')
        config.setVerbose(true)
        config.setAdditionalProperties([
                'basePath': 'http://localhost:8080'
        ])
        // config.setImportMappings([
        //        'Dog': 'io.swagger.petstore.client.model.Dog'
        // ])
        //noinspection UnnecessaryQualifiedReference
        new io.swagger.codegen.DefaultGenerator().opts(config.toClientOptInput()).generate()
    }
}
