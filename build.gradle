
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        // see: https://github.com/thebignet/swagger-codegen-gradle-plugin-example
        classpath("io.swagger:swagger-codegen:2.3.0-SNAPSHOT")
    }
}

apply plugin: 'base'

ext {
    springBootVersion = '1.5.7.RELEASE'
    swaggerVersion = '2.3.0-SNAPSHOT'
    h2Version = '1.4.193'
    springfoxVersion = '2.7.0'
    nodeVersion = '8.8.0'
    npmVersion = '5.5.1'
}


repositories {
    mavenCentral()
}



task mergeFrontendIntoBackend {
    dependsOn("frontend:build")
    doLast {
        copy {
            from file("${projectDir}/frontend/dist")
            into file("${projectDir}/backend/src/main/resources/public")
        }
    }
}

assemble.dependsOn(mergeFrontendIntoBackend)

task deletePublicDir {
    doLast {
        // public contains the frontend build copied over by the parent project
        delete "${projectDir}/backend/src/main/resources/public"
    }
}

clean.dependsOn(deletePublicDir)

// download the api docs from swagger backend to generate frontend code
// see: https://github.com/thebignet/swagger-codegen-gradle-plugin-example/blob/master/build.gradle
task downloadApiDocs {
    group 'API Generation'
    description 'Download the API definition from the swagger endpoint'

    doLast {
        def swaggerGenInput = new File("${projectDir}/frontend/src/resources/api.json")
        swaggerGenInput.parentFile.mkdirs()  // mkae sure the directory exists
        if (!swaggerGenInput.exists()) {
            outputs.println("delete existing api doc")
        }

        // create the new source file
        new URL('http://localhost:8080/v2/api-docs').withInputStream {
            stream -> swaggerGenInput.withOutputStream { it << stream }
        }
    }
}



