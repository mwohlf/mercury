import groovy.json.JsonBuilder
import groovy.json.JsonSlurper


// just the basics,
// see: http://mrhaki.blogspot.de/2010/10/gradle-goodness-base-plugin-usage.html
// we use assemble, clean steps
apply plugin: 'base'

// reading common libs and versions
apply from: "${projectDir}/gradle/dependencies.gradle"

ext {
    // file fetched from the swagger endpoint
    apiDefinitionPath = "${projectDir}/etc/resources/api.json"
    apiDefinitionSource = "http://localhost:8080/v2/api-docs"
}

// download the api docs from swagger backend to generate frontend code
// see: https://github.com/thebignet/swagger-codegen-gradle-plugin-example/blob/master/build.gradle
task downloadApiDocs {
    group 'API Generation'
    description 'Download the API definition from the swagger endpoint'

    doLast {
        def swaggerGenInput = new File("${project.ext.apiDefinitionPath}")
        swaggerGenInput.parentFile.mkdirs()  // make sure the directory exists
        if (!swaggerGenInput.exists()) {
            outputs.println("deleted existing api doc because we download a newer version now")
        }

        // create the new source file
        new URL("${project.ext.apiDefinitionSource}").withInputStream {
            stream -> swaggerGenInput.withOutputStream { it << stream }
        }
        // pretty print the content
        def json = new JsonSlurper().parseText(swaggerGenInput.text)
        swaggerGenInput.write(new JsonBuilder(json).toPrettyString())
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}

task MrProper {
    dependsOn clean
    doLast {
        delete "./.gradle"
    }
}
