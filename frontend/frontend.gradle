import io.swagger.codegen.DefaultGenerator

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        // see: https://github.com/thebignet/swagger-codegen-gradle-plugin-example
        classpath("io.swagger:swagger-codegen:2.3.1-SNAPSHOT") // version is also configured in dependencies.gradle
    }
}

plugins {
    id "com.moowork.node" version "1.2.0"
}

apply plugin: 'java'
apply plugin: 'maven-publish'

node {
    version = "${versions.node}"
    npmVersion = "${versions.npm}"
    yarnVersion = "${versions.yarn}"
    download = true
    workDir = file("${projectDir}/.gradle/node")
    nodeModulesDir = file("${project.projectDir}")
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

task generateApi {
    group "API Generation"
    description "Create angular API from the swagger definition in ${rootProject.ext.apiDefinitionPath}"

    inputs.files(file("${rootProject.ext.apiDefinitionPath}"))
    outputs.dir(file("${projectDir}/src/generated"))

    doLast {
        //noinspection UnnecessaryQualifiedReference
        def config = new io.swagger.codegen.config.CodegenConfigurator()
        config.setInputSpec("file:///${rootProject.ext.apiDefinitionPath}")
        config.setOutputDir("${projectDir}/src/generated")
        config.setLang('typescript-angular')
        config.setVerbose(false)
        config.setAdditionalProperties([
            'basePath': 'http://localhost:8080'
        ])
        new DefaultGenerator().opts(config.toClientOptInput()).generate()
    }
}

task yarnRunBuild(type: YarnTask) {
    group "Frontend Generation"
    description "compile the frontend with yarn"

    dependsOn yarn_install
    dependsOn generateApi
    args = ['run', 'build']   // compiles into build/dist. the output dir in package.json for "ng build"
}

// gradle webjar creates
task webjar(type: Jar) {
    group "Artifact Generation"
    description "assemble the maven artifact"

    dependsOn yarnRunBuild
    from(fileTree("build/dist"))
}
build.dependsOn(webjar)
build.dependsOn(publishToMavenLocal)

publishing {
    publications {
        // publish the frontend project as webjar to maven local
        WebJar(MavenPublication) {
            groupId 'net.wohlfart.mercury'
            artifactId 'frontend'
            version '0.0.1-SNAPSHOT'
            // the content of the webjar:
            artifact webjar
            // from webjar
        }
    }
}

task MrProper {
    dependsOn clean
    doLast {
        delete "${projectDir}/src/generated"
        delete "${projectDir}/dist"
        delete "${projectDir}/.gradle"
        delete "${projectDir}/node_modules"
    }
}

